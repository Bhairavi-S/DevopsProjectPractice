{"version":3,"names":["_test","require","_dotenv","dotenvConfig","_default","exports","default","defineConfig","fullyParallel","forbidOnly","process","env","CI","retries","workers","undefined","reporter","outputFile","use","trace","video","screenshot","headless","projects","name","devices"],"sources":["playwright.config.ts"],"sourcesContent":["import { defineConfig, devices } from '@playwright/test';\nimport { config as dotenvConfig } from 'dotenv';\n\n/* Read environment variables from file */\ndotenvConfig();\n/**\n * Read environment variables from file.\n * https://github.com/motdotla/dotenv\n */\n// require('dotenv').config();\n\n/**\n * See https://playwright.dev/docs/test-configuration.\n */\nexport default defineConfig({\n  \n  /* Run tests in files in parallel */\n  fullyParallel: true,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: process.env.CI ? 1 : undefined,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: [\n    ['html'],\n    ['junit', { outputFile: 'test-results/e2e-junit-results.xml' }]\n  ],\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {\n    /* Base URL to use in actions like `await page.goto('/')`. */\n    // baseURL: 'http://127.0.0.1:3000',\n\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: \"off\",\n    video: \"on\",\n    screenshot:\"on\",\n    headless: false, \n  },\n\n  /* Configure projects for major browsers */\n  projects: [\n\n    {\n      name: 'chromium',\n      use: { ...devices['Desktop Chrome'] },\n    },\n\n    // {\n    //   name: 'firefox',\n    //   use: { ...devices['Desktop Firefox'] },\n    // },\n\n    // {\n    //   name: 'webkit',\n    //   use: { ...devices['Desktop Safari'] },\n    // },\n\n    /* Test against mobile viewports. */\n    // {\n    //   name: 'Mobile Chrome',\n    //   use: { ...devices['Pixel 5'] },\n    // },\n    // {\n    //   name: 'Mobile Safari',\n    //   use: { ...devices['iPhone 12'] },\n    // },\n\n    /* Test against branded browsers. */\n    // {\n    //   name: 'Microsoft Edge',\n    //   use: { ...devices['Desktop Edge'], channel: 'msedge' },\n    // },\n    // {\n    //   name: 'Google Chrome',\n    //   use: { ...devices['Desktop Chrome'], channel: 'chrome' },\n    // },\n  ],\n  /* Run your local dev server before starting the tests */\n  // webServer: {\n  //   command: 'npm run start',\n  //   url: 'http://127.0.0.1:3000',\n  //   reuseExistingServer: !process.env.CI,\n  // },\n\n});\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAEA;AACA,IAAAE,cAAY,EAAC,CAAC;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe,IAAAC,kBAAY,EAAC;EAE1B;EACAC,aAAa,EAAE,IAAI;EACnB;EACAC,UAAU,EAAE,CAAC,CAACC,OAAO,CAACC,GAAG,CAACC,EAAE;EAC5B;EACAC,OAAO,EAAEH,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC;EAC/B;EACAE,OAAO,EAAEJ,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,CAAC,GAAGG,SAAS;EACvC;EACAC,QAAQ,EAAE,CACR,CAAC,MAAM,CAAC,EACR,CAAC,OAAO,EAAE;IAAEC,UAAU,EAAE;EAAqC,CAAC,CAAC,CAChE;EACD;EACAC,GAAG,EAAE;IACH;IACA;;IAEA;IACAC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE,IAAI;IACXC,UAAU,EAAC,IAAI;IACfC,QAAQ,EAAE;EACZ,CAAC;EAED;EACAC,QAAQ,EAAE,CAER;IACEC,IAAI,EAAE,UAAU;IAChBN,GAAG,EAAE;MAAE,GAAGO,aAAO,CAAC,gBAAgB;IAAE;EACtC;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;EAEF;EACA;EACA;EACA;EACA;EACA;AAEF,CAAC,CAAC"}